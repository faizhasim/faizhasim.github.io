{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/for-loop","result":{"data":{"markdownRemark":{"id":"d5da25ce-5f74-5ea8-93b0-f13334d140a8","html":"<p>I just recalled an interesting theory mentioned by my C lecturer back in uni days, use <code class=\"language-text\">++i</code> instead of <code class=\"language-text\">i++</code> in a for-loop.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// whatever code here....    </span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Theoretically (or without compiler optimization), <code class=\"language-text\">++i</code> is faster than <code class=\"language-text\">i++</code> because <code class=\"language-text\">i++</code> need to return the un-incremented value and store it first, before performing the increment. But, <code class=\"language-text\">++i</code> can return the incremented value without storing it first.</p>\n<p>While the claim is valid, for most languages and modern compilers, it doesnâ€™t really matter. In Java, it will produce the same bytecode. I think in modern C / C++ compilers, they did some optimization to that.</p>\n<p>I still have the old habit of using <code class=\"language-text\">++i</code> instead of <code class=\"language-text\">i++</code> when the rest of my team use <code class=\"language-text\">i++</code>. Need to take a note on this. </p>\n<blockquote>\n<p>Code Consistency</p>\n</blockquote>","fields":{"slug":"/posts/for-loop","tagSlugs":["/tag/java/","/tag/c-c/"]},"frontmatter":{"date":"2013-01-06T17:28:42","description":"I just recalled an interesting theory mentioned by my C lecturer back in uni days, use ++i instead of i++ in a for-loop.","tags":["java","c/c++"],"title":"For-loop, to ++i or i++ or not?","socialImage":"/media/1500x500.jpeg"}}},"pageContext":{"slug":"/posts/for-loop"}}}